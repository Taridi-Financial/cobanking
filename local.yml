version: '3'

volumes:
  cbsaas_local_postgres_data: {}
  cbsaas_local_postgres_data_backups: {}
  prometheus_data: {}
  grafana_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: cbsaas_local_django
    container_name: cbsaas_local_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: cbsaas_production_postgres
    container_name: cbsaas_local_postgres
    volumes:
      - cbsaas_local_postgres_data:/var/lib/postgresql/data:Z
      - cbsaas_local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: cbsaas_local_pgadmin4
    ports:
      - "5050:80"
    env_file:
      - ./.envs/.local/.pgadmin

  docs:
    image: cbsaas_local_docs
    container_name: cbsaas_local_docs
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./cbsaas:/app/cbsaas:z
    ports:
      - "9000:9000"
    command: /start-docs

  redis:
    image: redis:6
    container_name: cbsaas_local_redis

  celeryworker:
    <<: *django
    image: cbsaas_local_celeryworker
    container_name: cbsaas_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cbsaas_local_celerybeat
    container_name: cbsaas_local_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: cbsaas_local_flower
    container_name: cbsaas_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

  prometheus:
    image: prom/prometheus
    restart: 'no'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    network_mode: host

  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    network_mode: host